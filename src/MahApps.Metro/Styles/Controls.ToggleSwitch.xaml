<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Controls="clr-namespace:MahApps.Metro.Controls"
                    xmlns:converters="clr-namespace:MahApps.Metro.Converters"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Themes/ToggleSwitch.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--  Win10 style  -->

    <system:Double x:Key="ToggleSwitchOnStrokeThickness">0</system:Double>
    <system:Double x:Key="ToggleSwitchOffStrokeThickness">2</system:Double>
    <system:Double x:Key="ToggleSwitchThemeMinWidth">154</system:Double>

    <Style x:Key="MahApps.Styles.ToggleSwitchButton.Win10"
           BasedOn="{StaticResource MahApps.Styles.ToggleSwitchButton}"
           TargetType="{x:Type Controls:ToggleSwitchButton}">
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Height" Value="20" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="OffSwitchBrush" Value="{DynamicResource MahApps.Brushes.ToggleSwitch.FillOff}" />
        <Setter Property="OnSwitchBrush" Value="{DynamicResource MahApps.Brushes.ToggleSwitch.FillOn}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:ToggleSwitchButton}">
                    <Grid>
                        <Grid x:Name="PART_SwitchTrack"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              UseLayoutRounding="False">
                            <Rectangle x:Name="OuterBorder"
                                       Width="{TemplateBinding Width}"
                                       Height="{TemplateBinding Height}"
                                       Fill="{TemplateBinding OffSwitchBrush}"
                                       RadiusX="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Height, Converter={converters:RectangleHeightToRadiusConverter}, Mode=OneWay}"
                                       RadiusY="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Height, Converter={converters:RectangleHeightToRadiusConverter}, Mode=OneWay}"
                                       Stroke="{DynamicResource MahApps.Brushes.ToggleSwitch.StrokeOff}"
                                       StrokeThickness="{DynamicResource ToggleSwitchOffStrokeThickness}" />
                            <Rectangle x:Name="SwitchKnobBounds"
                                       Width="{TemplateBinding Width}"
                                       Height="{TemplateBinding Height}"
                                       Fill="{TemplateBinding OnSwitchBrush}"
                                       Opacity="0"
                                       RadiusX="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Height, Converter={converters:RectangleHeightToRadiusConverter}, Mode=OneWay}"
                                       RadiusY="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Height, Converter={converters:RectangleHeightToRadiusConverter}, Mode=OneWay}"
                                       Stroke="{DynamicResource MahApps.Brushes.ToggleSwitch.StrokeOn}"
                                       StrokeThickness="{DynamicResource ToggleSwitchOnStrokeThickness}" />
                            <Grid x:Name="PART_ThumbIndicator"
                                  Width="{TemplateBinding Height}"
                                  Height="{TemplateBinding Height}"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Center">
                                <Grid.RenderTransform>
                                    <TranslateTransform x:Name="PART_ThumbTranslate" />
                                </Grid.RenderTransform>
                                <Ellipse x:Name="SwitchKnobOn"
                                         Fill="{DynamicResource MahApps.Brushes.ToggleSwitch.KnobFillOn}"
                                         Width="{TemplateBinding ThumbIndicatorWidth}"
                                         Height="{TemplateBinding ThumbIndicatorWidth}"
                                         Opacity="0" />
                                <Ellipse x:Name="SwitchKnobOff"
                                         Width="{TemplateBinding ThumbIndicatorWidth}"
                                         Height="{TemplateBinding ThumbIndicatorWidth}"
                                         Fill="{DynamicResource MahApps.Brushes.ToggleSwitch.KnobFillOff}" />
                            </Grid>
                        </Grid>
                        <Thumb x:Name="PART_DraggingThumb">
                            <Thumb.Template>
                                <ControlTemplate>
                                    <Rectangle Fill="Transparent" />
                                </ControlTemplate>
                            </Thumb.Template>
                        </Thumb>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--  Checked  -->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="SwitchKnobBounds" Property="Opacity" Value="1" />
                            <Setter TargetName="OuterBorder" Property="Opacity" Value="0" />
                            <Setter TargetName="SwitchKnobOn" Property="Opacity" Value="1" />
                            <Setter TargetName="SwitchKnobOff" Property="Opacity" Value="0" />
                        </Trigger>

                        <!--  MouseOver  -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="OuterBorder" Property="Stroke" Value="{DynamicResource MahApps.Brushes.ToggleSwitch.StrokeOffPointerOver}" />
                            <Setter TargetName="OuterBorder" Property="Fill" Value="{DynamicResource MahApps.Brushes.ToggleSwitch.FillOffPointerOver}" />
                            <Setter TargetName="SwitchKnobOff" Property="Fill" Value="{DynamicResource MahApps.Brushes.ToggleSwitch.KnobFillOffPointerOver}" />
                            <Setter TargetName="SwitchKnobOn" Property="Fill" Value="{DynamicResource MahApps.Brushes.ToggleSwitch.KnobFillOnPointerOver}" />
                            <Setter TargetName="SwitchKnobBounds" Property="Fill" Value="{DynamicResource MahApps.Brushes.ToggleSwitch.FillOnPointerOver}" />
                            <Setter TargetName="SwitchKnobBounds" Property="Stroke" Value="{DynamicResource MahApps.Brushes.ToggleSwitch.StrokeOnPointerOver}" />
                            <!-- <Setter TargetName="SwitchAreaGrid" Property="Background" Value="{DynamicResource MahApps.Brushes.ToggleSwitch.ContainerBackgroundPointerOver}" /> -->
                        </Trigger>

                        <!--  Pressed  -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="OuterBorder" Property="StrokeThickness" Value="0" />
                            <Setter TargetName="OuterBorder" Property="Stroke" Value="{DynamicResource MahApps.Brushes.ToggleSwitch.StrokeOffPressed}" />
                            <Setter TargetName="OuterBorder" Property="Fill" Value="{DynamicResource MahApps.Brushes.ToggleSwitch.FillOffPressed}" />
                            <Setter TargetName="SwitchKnobBounds" Property="Fill" Value="{DynamicResource MahApps.Brushes.ToggleSwitch.FillOnPressed}" />
                            <Setter TargetName="SwitchKnobBounds" Property="Stroke" Value="{DynamicResource MahApps.Brushes.ToggleSwitch.StrokeOnPressed}" />
                            <Setter TargetName="SwitchKnobOff" Property="Fill" Value="{DynamicResource MahApps.Brushes.ToggleSwitch.KnobFillOffPressed}" />
                            <Setter TargetName="SwitchKnobOn" Property="Fill" Value="{DynamicResource MahApps.Brushes.ToggleSwitch.KnobFillOnPressed}" />
                            <!-- <Setter TargetName="SwitchAreaGrid" Property="Background" Value="{DynamicResource MahApps.Brushes.ToggleSwitch.ContainerBackgroundPressed}" /> -->
                        </Trigger>

                        <!--  Disabled  -->
                        <Trigger Property="IsEnabled" Value="False">
                            <!-- <Setter TargetName="HeaderContentPresenter" Property="Foreground" Value="{DynamicResource MahApps.Brushes.ToggleSwitch.HeaderForegroundDisabled}" /> -->
                            <!-- <Setter TargetName="OffContentPresenter" Property="Foreground" Value="{DynamicResource MahApps.Brushes.ToggleSwitch.ContentForegroundDisabled}" /> -->
                            <!-- <Setter TargetName="OnContentPresenter" Property="Foreground" Value="{DynamicResource MahApps.Brushes.ToggleSwitch.ContentForegroundDisabled}" /> -->
                            <Setter TargetName="OuterBorder" Property="Stroke" Value="{DynamicResource MahApps.Brushes.ToggleSwitch.StrokeOffDisabled}" />
                            <Setter TargetName="OuterBorder" Property="Fill" Value="{DynamicResource MahApps.Brushes.ToggleSwitch.FillOffDisabled}" />
                            <Setter TargetName="SwitchKnobBounds" Property="Fill" Value="{DynamicResource MahApps.Brushes.ToggleSwitch.FillOnDisabled}" />
                            <Setter TargetName="SwitchKnobBounds" Property="Stroke" Value="{DynamicResource MahApps.Brushes.ToggleSwitch.StrokeOnDisabled}" />
                            <Setter TargetName="SwitchKnobOff" Property="Fill" Value="{DynamicResource MahApps.Brushes.ToggleSwitch.KnobFillOffDisabled}" />
                            <Setter TargetName="SwitchKnobOn" Property="Fill" Value="{DynamicResource MahApps.Brushes.ToggleSwitch.KnobFillOnDisabled}" />
                            <!-- <Setter TargetName="SwitchAreaGrid" Property="Background" Value="{DynamicResource MahApps.Brushes.ToggleSwitch.ContainerBackgroundDisabled}" /> -->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ThumbIndicatorWidth" Value="10" />
        <Setter Property="Width" Value="44" />
    </Style>

    <Style x:Key="MahApps.Styles.ToggleSwitch.Win10"
           BasedOn="{StaticResource MahApps.Styles.ToggleSwitch}"
           TargetType="{x:Type Controls:ToggleSwitch}">
        <Setter Property="ContentDirection" Value="RightToLeft" />
        <Setter Property="ContentPadding" Value="0 0 12 0" />
        <Setter Property="Controls:HeaderedControlHelper.HeaderMargin" Value="0 0 0 4" />
        <Setter Property="Controls:HeaderedControlHelper.HeaderFontSize" Value="{DynamicResource MahApps.Font.Size.ToggleSwitch.Header.Win10}" />
        <Setter Property="FontFamily" Value="{DynamicResource MahApps.Fonts.Family.ToggleSwitch.Win10}" />
        <Setter Property="FontSize" Value="{DynamicResource MahApps.Font.Size.ToggleSwitch.Win10}" />
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ToggleSwitch.ContentForeground}" />
        <Setter Property="HeaderFontFamily" Value="{DynamicResource MahApps.Fonts.Family.ToggleSwitch.Header.Win10}" />
        <Setter Property="OffSwitchBrush" Value="{DynamicResource MahApps.Brushes.ToggleSwitch.FillOff}" />
        <Setter Property="OnSwitchBrush" Value="{DynamicResource MahApps.Brushes.ToggleSwitch.FillOn}" />
        <Setter Property="ThumbIndicatorWidth" Value="10" />
        <Setter Property="ToggleSwitchButtonStyle" Value="{StaticResource MahApps.Styles.ToggleSwitchButton.Win10}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:ToggleSwitch}">
                    <Border Padding="{TemplateBinding Padding}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding Controls:ControlsHelper.CornerRadius}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Grid Background="Transparent">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <ContentPresenter x:Name="HeaderContentPresenter"
                                              Grid.Row="0"
                                              Grid.Column="0"
                                              TextElement.Foreground="{DynamicResource MahApps.Brushes.ToggleSwitch.HeaderForeground}"
                                              Margin="{TemplateBinding Controls:HeaderedControlHelper.HeaderMargin}"
                                              Content="{TemplateBinding Header}"
                                              ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                              ContentTemplate="{TemplateBinding HeaderTemplate}"
                                              ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                              TextElement.FontFamily="{TemplateBinding HeaderFontFamily}"
                                              TextElement.FontSize="{TemplateBinding Controls:HeaderedControlHelper.HeaderFontSize}"
                                              TextElement.FontWeight="{TemplateBinding Controls:HeaderedControlHelper.HeaderFontWeight}"
                                              IsHitTestVisible="False" />
                                              <!-- IsTabStop="False" /> -->
                            <Grid Grid.Row="1"
                                  MinWidth="{DynamicResource ToggleSwitchThemeMinWidth}"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Top">

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="firstCol" Width="Auto" />
                                    <ColumnDefinition x:Name="secCol" Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <Grid x:Name="SwitchAreaGrid"
                                      Grid.ColumnSpan="2"
                                      Margin="0 5"
                                      Background="{DynamicResource MahApps.Brushes.ToggleSwitch.ContainerBackground}" />

                                <ContentPresenter x:Name="Content"
                                                  Grid.Row="0"
                                                  Grid.Column="0"
                                                  TextElement.Foreground="{TemplateBinding Foreground}"
                                                  IsHitTestVisible="False"
                                                  Margin="{TemplateBinding ContentPadding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Content="{TemplateBinding Content}"
                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                  TextElement.FontFamily="{TemplateBinding FontFamily}"
                                                  TextElement.FontSize="{TemplateBinding FontSize}" />
                                                  <!-- IsTabStop="False" /> -->
                                <ContentPresenter x:Name="ContentOnLabel"
                                                  Grid.Row="0"
                                                  Grid.Column="0"
                                                  TextElement.Foreground="{TemplateBinding Foreground}"
                                                  IsHitTestVisible="False"
                                                  Margin="{TemplateBinding ContentPadding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Content="{TemplateBinding OnLabel}"
                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                  TextElement.FontFamily="{TemplateBinding FontFamily}"
                                                  TextElement.FontSize="{TemplateBinding FontSize}"
                                                  Visibility="Hidden" />
                                                  <!-- IsTabStop="False" -->
                                <ContentPresenter x:Name="ContentOffLabel"
                                                  Grid.Row="0"
                                                  Grid.Column="0"
                                                  TextElement.Foreground="{TemplateBinding Foreground}"
                                                  IsHitTestVisible="False"
                                                  Margin="{TemplateBinding ContentPadding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Content="{TemplateBinding OffLabel}"
                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                  TextElement.FontFamily="{TemplateBinding FontFamily}"
                                                  TextElement.FontSize="{TemplateBinding FontSize}"
                                                  Visibility="Hidden" />
                                                  <!-- IsTabStop="False" -->
                                <Controls:ToggleSwitchButton x:Name="Switch"
                                                         Grid.Row="0"
                                                         Grid.Column="1"
                                                         VerticalAlignment="Center"
                                                         Background="{TemplateBinding Background}"
                                                         FocusVisualStyle="{x:Null}"
                                                         IsChecked="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                         OffSwitchBrush="{TemplateBinding OffSwitchBrush}"
                                                         OnSwitchBrush="{TemplateBinding OnSwitchBrush}"
                                                         SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                         Style="{TemplateBinding ToggleSwitchButtonStyle}"
                                                         ThumbIndicatorBrush="{TemplateBinding ThumbIndicatorBrush}"
                                                         ThumbIndicatorDisabledBrush="{TemplateBinding ThumbIndicatorDisabledBrush}"
                                                         ThumbIndicatorWidth="{TemplateBinding ThumbIndicatorWidth}" />
                            </Grid>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HeaderContentPresenter"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To="0.3"
                                                         Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="Content"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To="0.3"
                                                         Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="ContentOnLabel"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To="0.3"
                                                         Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="ContentOffLabel"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To="0.3"
                                                         Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="Switch"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To="0.75"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="Content" Value="{x:Null}" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ContentOnLabel" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False" />
                                <Condition Property="Content" Value="{x:Null}" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ContentOffLabel" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Header}" Value="{x:Null}">
                            <Setter TargetName="HeaderContentPresenter" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <Trigger Property="ContentDirection" Value="RightToLeft">
                            <Setter TargetName="Content" Property="Grid.Column" Value="1" />
                            <Setter TargetName="ContentOffLabel" Property="Grid.Column" Value="1" />
                            <Setter TargetName="ContentOnLabel" Property="Grid.Column" Value="1" />
                            <Setter TargetName="Switch" Property="Grid.Column" Value="0" />
                            <Setter TargetName="firstCol" Property="Width" Value="Auto" />
                            <Setter TargetName="secCol" Property="Width" Value="*" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ContentDirection" Value="RightToLeft">
                <Setter Property="ContentPadding" Value="12 0 0 0" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>